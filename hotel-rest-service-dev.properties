#service port
server.port=8092
#application name
spring.application.name=hotel-rest-service

#datasource
spring.datasource.url=jdbc:h2:mem:testdb;DATABASE_TO_UPPER=false;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true

# Spring JPA configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#This allows execution of data.sql after Hybernate generated the tables (without this Spring throws exception if the table wasn't already generated)
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.hibernate.ddl-auto = create

# Actuator configuration
management.port=${server.port}
management.endpoints.web.exposure.include=health,info
management.info.env.enabled=true

# Application info (to be exposed by /info actuator)
info.application.name=D&D project flight routes REST service
info.application.description=An API REST serving data about hotels
info.application.version=0.0.1-SNAPSHOT

#springdoc configurations
springdoc.api-docs.path=/hotels/docs/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/hotels/docs/swagger-ui
springdoc.swagger-ui.displayRequestDuration=false

#api docs
springdoc.version=0.1.0
